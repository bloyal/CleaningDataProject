install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
exit
quit
end
library("swirl")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2
z*2+100
mysqrt<-sqrt(z-1)
mySqrt<-sqrt(z-1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
bye()
swirl
swirl()
library("Swirl")
library("swirl")
ls()
rm(list=ls())
swirl()
num_vect<-c(0.5,55,-10,6)
tf<- num_vect<1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"Brian")
my_name
paste(my_char,collapse=" ")
paste(my_name,collapse=" ")
paste("Hello", "world!", sep=" ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
swirl()
Swirl()
Swirl
library(swirl)
rm(list=ls())
swirl()
x <- c(44,NA,5,na)
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z<-rep(NA,1000)
myData<- sample(c(x,y),100)
myData<- sample(c(y,z),100)
myNA=is.na(myData)
myNA<-is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)<-c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector = 1:20
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20,4,5)
identical(myMatrix,myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
setwd("~/RFiles")
pwd
acs<-read.csv("C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataQ2\\data.csv")
html<-readLines("http://biostat.jhsph.edu/~jleek/contact.html")
con<-url("http://biostat.jhsph.edu/~jleek/contact.html")
html<-readLines(con)
close(con)
html
html[1]
html[2]
html[3]
nchar(html[1])
nchar(html[10])
nchar(html[20])
nchar(html[30])
nchar(html[100])
?download
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for","C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataQ2\\file.for")
?load
load.csv
?read
?read/csv
?read.csv
read.fwf
?read.fwf
info<-read.csv(file="C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataQ2\\file.for",skip=4, widths=c(9,9,9,9,9))
info<-read.fwf(file="C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataQ2\\file.for",skip=4, widths=c(9,9,9,9,9))
header(info)
headers(info)
head(info)
info<-read.fwf(file="C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataQ2\\file.for",skip=4, sep="\t"
info<-read.fwf(file="C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataQ2\\file.for",skip=4, sep="\t")
info<-read.fwf(file="C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataQ2\\file.for",skip=4, sep="\t", widths=5)
info<-read.fwf(file="C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataQ2\\file.for",skip=4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(info)
info[1][1]
info(1,)
info[1,]
info[1,1]
info[1,"V1"]
head(info)
info[1,]
info[1,2]
info[,4
]
sum(info[,4])
?chdir
setwd('C:\Users\BBLOYA\Documents\GitHub\CleaningDataProject')
setwd('C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataProject')
getwd()
?read.table
testRaw <- readt.table("\\UCI HAR Dataset\\test\\X_test.txt")
testRaw <- read.table("\\UCI HAR Dataset\\test\\X_test.txt")
testRaw <- read.table("C:\Users\BBLOYA\Documents\GitHub\CleaningDataProject\UCI HAR Dataset\test")
testRaw <- read.table("C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataProject\\UCI HAR Dataset\\test")
testRaw <- read.table("C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataProject\\UCI HAR Dataset\\test")
testRaw <- read.table("C:\\Users\\BBLOYA\\Documents\\GitHub\\CleaningDataProject\\UCI HAR Dataset\\test\\X_test.txt")
summary(testRaw)
head(testRaw)
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
paths
paths[1]
paths["subject_test"]
source('~/GitHub/CleaningDataProject/run_analysis.R')
loadData()
loadData(paths)
?list
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
loadData(paths)
?read.table
paths["subject_test"]
testRaw<- read.table(paths["subject_test"])
?size
?nrows
?nrow
source('~/GitHub/CleaningDataProject/run_analysis.R')
loadData(paths)
source('~/GitHub/CleaningDataProject/run_analysis.R')
loadData(paths)
source('~/GitHub/CleaningDataProject/run_analysis.R')
loadData(paths)
source('~/GitHub/CleaningDataProject/run_analysis.R')
loadData(paths)
source('~/GitHub/CleaningDataProject/run_analysis.R')
loadData(paths)
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
testList<- loadData(paths)
source('~/GitHub/CleaningDataProject/run_analysis.R')
testList<- loadData(paths)
source('~/GitHub/CleaningDataProject/run_analysis.R')
testList<- loadData(paths)
source('~/GitHub/CleaningDataProject/run_analysis.R')
testList<- loadData(paths)
?read.table
source('~/GitHub/CleaningDataProject/run_analysis.R')
testList<- loadData(paths)
source('~/GitHub/CleaningDataProject/run_analysis.R')
?merge
?rcat
?cbind
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
paths
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
feat<-getFeatureNames
source('~/GitHub/CleaningDataProject/run_analysis.R')
feat<-getFeatureNames(paths["features"])
source('~/GitHub/CleaningDataProject/run_analysis.R')
feat<-getFeatureNames(paths["features"])
source('~/GitHub/CleaningDataProject/run_analysis.R')
feat<-getFeatureNames(paths["features"])
source('~/GitHub/CleaningDataProject/run_analysis.R')
feat<-getFeatureNames(paths["features"])
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
dataSet<-createDataSet(testList,feat)
summary(dataSet)
summary(dataSet[[testSet]])
summary(dataSet[["testSet""]])
summary(dataSet[["testSet]])
?rnum
?nrow
nrow(dataSet[["testSet"]])
datSet[["testSet"]][[1]]
dataSet[["testSet"]][[1]]
source('~/GitHub/CleaningDataProject/run_analysis.R')
dataSet<-createDataSet(testList,feat)
dataSet[["testSet"]][["subject"]]
source('~/GitHub/CleaningDataProject/run_analysis.R')
dataSet<-createDataSet(testList,feat)
?merge
?rbind
source('~/GitHub/CleaningDataProject/run_analysis.R')
dataSet<-createDataSet(testList,feat)
summary(dataSet)
head(datSet)
head(dataSet)
dim(dataSet)
datSet["subjects"]
dataSet["subjects"]
features
feat
dataSet["angle(Z,gravityMean"]
names(dataSet)
dataSet<-createDataSet(testList,feat)
names(dataSet)
colnames(dataSet)
feat
?print
dataSet<-createDataSet(testList,feat)
source('~/GitHub/CleaningDataProject/run_analysis.R')
dataSet<-createDataSet(testList,feat)
feat
feat[1]
source('~/GitHub/CleaningDataProject/run_analysis.R')
func<-getFeatureNames(paths["features"])
feat<-func
dataSet<-createDataSet(testList,feat)
names(dataSet)
dataSet[1]["angle(Z,gravityMean)"]
dataSet[1,"angle(Z,gravityMean)"]
source('~/GitHub/CleaningDataProject/run_analysis.R')
?grep
grep("max",names(dataSet))
a<-grep("max",names(dataSet))
a
names(dataSet)[a]
a<-grep("mean",names(dataSet))
names(dataSet)[a]
a<-grep("mean()",names(dataSet))
names(dataSet)[a]
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
selectMeanAndStdData(dataSet)
source('~/GitHub/CleaningDataProject/run_analysis.R')
selectMeanAndStdData(dataSet)
source('~/GitHub/CleaningDataProject/run_analysis.R')
names(dataSet)[a]
source('~/GitHub/CleaningDataProject/run_analysis.R')
selectMeanAndStdData(dataSet)
source('~/GitHub/CleaningDataProject/run_analysis.R')
selectMeanAndStdData(dataSet)
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
meanAndStd<-selectmeanAndStdData(dataSet)
meanAndStd<-selectMeanAndStdData(dataSet)
names(meanAndStd)
source('~/GitHub/CleaningDataProject/run_analysis.R')
meanAndStd<-selectMeanAndStdData(dataSet)
names(meanAndStd)
?merge
source('~/GitHub/CleaningDataProject/run_analysis.R')
paths$activities
paths["activities"]
source('~/GitHub/CleaningDataProject/run_analysis.R')
activityNames<-getActivityNames(paths["activities"])
activitiyNames
activityNames
source('~/GitHub/CleaningDataProject/run_analysis.R')
activityNames<-getActivityNames(paths["activities"])
activityNames
labeled<- merge(x=meanAndStd,y=activityNames,by.x="activities",by.y="V1")
head(labeled)
source('~/GitHub/CleaningDataProject/run_analysis.R')
activityNames<-getActivityNames(paths["activities"])
activityNames
source('~/GitHub/CleaningDataProject/run_analysis.R')
activityNames
activityNames<-getActivityNames(paths["activities"])
activityNames
labeled<- labelActivities(meanAndStd,activityNames)
source('~/GitHub/CleaningDataProject/run_analysis.R')
labeled<- labelActivities(meanAndStd,activityNames)
source('~/GitHub/CleaningDataProject/run_analysis.R')
labeled<- labelActivities(meanAndStd,activityNames)
source('~/GitHub/CleaningDataProject/run_analysis.R')
labeled<- labelActivities(meanAndStd,activityNames)
names(meanAndStc)
names(meanAndStd)
source('~/GitHub/CleaningDataProject/run_analysis.R')
names(meanAndStd)
labeled<- labelActivities(meanAndStd,activityNames)
head(labeled)
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
source('~/GitHub/CleaningDataProject/run_analysis.R')
?tapply
tapply(labeled,labeled["activityName"],average)
?average
?avg
?mean
tapply(labeled,labeled["activityName"],mean)
rnum(labeled)
nrow(labeled)
nrow(labeled["activityName"])
nrow(labeled$activityName)
labeled$ActivityName
labeled["ActivityName"]
labeled["ctivityName"]
labeled["activityName"]
?tapply
?apply
?tapply
labeled$activityName
tapply(labeled$activity,labeled$activityName,mean)
head(labeled)
tapply(labeled$fBodyBodyGyroJerkMag-std(),labeled$activityName,mean)
tapply(labeled[,"fBodyBodyGyroJerkMag-std()"],labeled$activityName,mean)
tapply(labeled,labeled$activityName,mean)
names(labeled)
names(labeled[,c(3:68)])
tapply(labeled[,c(3:68)],labeled$activityName,mean)
tapply(labeled[,68],labeled$activityName,mean)
mapply
?mapply
lapply
>lapply
?lapply
?by
by(labeled[,c(3:68)],labeled$activityName,mean)
source('~/GitHub/CleaningDataProject/run_analysis.R')
labeled[,c(3:68)]
by(labeled[,c(68)],labeled$activityName,mean)
by(labeled[,c(67,68)],labeled$activityName,mean)
by(labeled[,67:68],labeled$activityName,mean)
by(labeled[,67:68],labeled$activityName,mean,simplify=TRUE)
by(labeled[,68],labeled$activityName,mean,simplify=TRUE)
source('~/GitHub/CleaningDataProject/run_analysis.R')
?lapply
by(labeled[,67:68],labeled$activityName,mean,simplify=TRUE)
by(labeled[,68],labeled$activityName,mean,simplify=TRUE)
by(labeled[,67],labeled$activityName,mean,simplify=TRUE)
by(labeled[67:68],labeled$activityName,mean,simplify=TRUE)
b<-apply(labeled[3:68],mean)
b<-sapply(labeled[3:68],mean)
b
b<-apply(labeled[3:68],mean)
?apply
?sapply
by(labeled[67:68],labeled$activityName,colMeans)
b<-by(labeled[3:68],labeled$activityName,colMeans)
head(b)
b<-by(labeled[3:68],labeled$activityName,colMeans,simplify=TRUE)
summary(b)
mean(labeled[67:68])
b<-by(labeled[3:68],c(labeled$activityName,labeled$subject),colMeans,simplify=TRUE)
source('~/GitHub/CleaningDataProject/run_analysis.R')
